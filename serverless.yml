service: utomea-serverless-api-staging-1
# package:
#   individually: true
frameworkVersion: "3"
custom:
  bucket: utomea-events

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs18.x
  timeout: 30 # the timeout is 20 seconds (default is 6 seconds)
  lambdaHashingVersion: 20201221
  apiGateway:
    binaryMediaTypes:
      - "*/*"
  # iamRoleStatements:
  #   # Allow to get and put objects in a bucket
  #   - Effect: Allow
  #     Action:
  #       - "s3:PutObject"
  #       - "s3:GetObject"
  #     Resource:
  #       - arn:aws:s3:::react-native-events/*

functions:
  getAllEvents:
    handler: functions/events.getAllEvents
    events:
      - httpApi:
          path: /events
          method: get

  createEvent:
    handler: functions/events.createEvent
    events:
      - httpApi:
          path: /events
          method: post

  editEvent:
    handler: functions/events.editEvent
    events:
      - httpApi:
          path: /events/{id}
          method: put

  deleteEvent:
    handler: functions/events.deleteEvent
    events:
      - httpApi:
          path: /events/{id}
          method: delete

  searchEvent:
    handler: functions/events.search
    events:
      - httpApi:
          path: /events/search
          method: post

  autoSuggest:
    handler: functions/events.autoSuggest
    events:
      - httpApi:
          path: /search/autosuggest
          method: post

  getEventDetails:
    handler: functions/events.getEventDetails
    events:
      - httpApi:
          path: /events/{id}
          method: get

  getUserDetails:
    handler: functions/auth.getUserDetails
    events:
      - httpApi:
          path: /user/user-details
          method: get

  uploadImages:
    handler: index.uploadImagesToS3
    events:
      - httpApi:
          path: /events/upload/{id}
          method: post
    environment:
      BUCKET_NAME: utomea-events
  
  getPreSignedUrl:
    handler: index.getPreSignedUrl
    events:
      - httpApi:
          path: /events/presigned-url
          method: post

  seedImageUrls:
    handler: index.seedImageUrls
    events:
      - httpApi:
          path: /events/seed-url
          method: post

  uploadProfilePic:
    handler: functions/auth.uploadProfilePic
    events:
      - httpApi:
          path: /user/upload-profile-pic
          method: post
    environment:
      BUCKET_NAME: utomea-events

  deletePhotos:
    handler: functions/photo.deletePhotos
    events:
      - httpApi:
          path: /photos
          method: delete

  userSignup:
    handler: functions/auth.userSignup
    events:
      - httpApi:
          path: /user/signup
          method: post

  sendVerificationEmail:
    handler: functions/auth.sendVerificationEmail
    events:
      - httpApi:
          path: /user/send-verification-email
          method: post

  verifyOTP:
    handler: functions/auth.verifyOTP
    events:
      - httpApi:
          path: /user/verify-otp
          method: post

  verifyForgotPasswordOTP:
    handler: functions/auth.verifyForgotPasswordOTP
    events:
      - httpApi:
          path: /user/verify-forgot-otp
          method: post

  userSignIn:
    handler: functions/auth.userSignIn
    events:
      - httpApi:
          path: /user/signin
          method: post

  socialLogin:
    handler: functions/auth.socialLogin
    events:
      - httpApi:
          path: /auth/social-login
          method: post

  updateUser:
    handler: functions/auth.updateUser
    events:
      - httpApi:
          path: /user/user-details
          method: put

  deleteUser:
    handler: functions/auth.deleteUser
    events:
      - httpApi:
          path: /user/delete-user/{id}
          method: delete


  forgotPassword:
    handler: functions/auth.forgotPassword
    events:
      - httpApi:
          path: /auth/forgot-password
          method: post

  resetPassword:
    handler: functions/auth.resetPassword
    events:
      - httpApi:
          path: /auth/reset-password
          method: post

  changePassword:
    handler: functions/auth.changePassword
    events:
      - httpApi:
          path: /auth/change-password
          method: post

  getAllCategories:
    handler: functions/category.getAllCategories
    events:
      - httpApi:
          path: /category
          method: get

  createExcludedLocation:
    handler: functions/excludedList.createExcludedLocation
    events:
      - httpApi:
          path: /exclude-location
          method: post

  getExcludedLocations:
    handler: functions/excludedList.getExcludedLocations
    events:
      - httpApi:
          path: /excluded-locations
          method: get

  deleteExcludedLocation:
    handler: functions/excludedList.deleteExcludedLocation
    events:
      - httpApi:
          path: /excluded-location/{id}
          method: delete

  deleteProfilePic:
    handler: functions/auth.deleteProfilePic
    events:
      - httpApi:
          path: /user/delete-profile-pic
          method: delete

  setHeroImage:
    handler: functions/events.setHeroImage
    events:
      - httpApi:
          path: /events/set-hero-image
          method: post



  verify-token:
    handler: src/middleware/verifyToken.authenticateJWT

plugins:
  - serverless-offline
  - serverless-plugin-typescript

resources:
  Resources:
    StorageBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: utomea-events
