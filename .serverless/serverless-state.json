{
  "service": {
    "service": "utomea-serverless-api-staging-1",
    "serviceObject": {
      "name": "utomea-serverless-api-staging-1"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "timeout": 30,
      "lambdaHashingVersion": "20201221",
      "apiGateway": {
        "binaryMediaTypes": [
          "*/*"
        ]
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::react-native-events/*"
        }
      ],
      "stage": "dev",
      "region": "us-east-2",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetAllEventsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-getAllEvents"
            }
          },
          "CreateEventLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-createEvent"
            }
          },
          "EditEventLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-editEvent"
            }
          },
          "DeleteEventLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-deleteEvent"
            }
          },
          "UploadImagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-uploadImages"
            }
          },
          "UserSignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-userSignup"
            }
          },
          "UserSignInLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-userSignIn"
            }
          },
          "UpdateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-updateUser"
            }
          },
          "ForgotPasswordLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-forgotPassword"
            }
          },
          "ResetPasswordLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-resetPassword"
            }
          },
          "VerifyDashtokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/utomea-serverless-api-staging-1-dev-verify-token"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "utomea-serverless-api-staging-1",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/utomea-serverless-api-staging-1-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/utomea-serverless-api-staging-1-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "utomea-serverless-api-staging-1",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetAllEventsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/events.getAllEvents",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-getAllEvents",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllEventsLogGroup"
            ]
          },
          "CreateEventLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/events.createEvent",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-createEvent",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateEventLogGroup"
            ]
          },
          "EditEventLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/events.editEvent",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-editEvent",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EditEventLogGroup"
            ]
          },
          "DeleteEventLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/events.deleteEvent",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-deleteEvent",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteEventLogGroup"
            ]
          },
          "UploadImagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "index.uploadImagesToS3",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-uploadImages",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "react-native-events"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UploadImagesLogGroup"
            ]
          },
          "UserSignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/auth.userSignup",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-userSignup",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UserSignupLogGroup"
            ]
          },
          "UserSignInLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/auth.userSignIn",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-userSignIn",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UserSignInLogGroup"
            ]
          },
          "UpdateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/auth.updateUser",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-updateUser",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUserLogGroup"
            ]
          },
          "ForgotPasswordLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/auth.forgotPassword",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-forgotPassword",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ForgotPasswordLogGroup"
            ]
          },
          "ResetPasswordLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "functions/auth.resetPassword",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-resetPassword",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ResetPasswordLogGroup"
            ]
          },
          "VerifyDashtokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z/utomea-serverless-api-staging-1.zip"
              },
              "Handler": "src/middleware/verifyToken.authenticateJWT",
              "Runtime": "nodejs18.x",
              "FunctionName": "utomea-serverless-api-staging-1-dev-verify-token",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "VerifyDashtokenLogGroup"
            ]
          },
          "GetAllEventsLambdaVersionp8YINiNicYsRxDZ6QwCXwHBKqn632VuSnXg9tEg5kI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllEventsLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "CreateEventLambdaVersionLhWEsPGLBqueGKvQCeGLSzDiCGuBYekfph2fghKktfM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateEventLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "EditEventLambdaVersionHkL5KZPVh23hGPmfjrorz3ypxpIOzMRpQUGwwfPIdM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EditEventLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "DeleteEventLambdaVersion2vD7UldytPr2QNU8Mvcw9TUMn2YRSGY0ZdFC6V1tztU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteEventLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "UploadImagesLambdaVersionaJDJbShW6ogkiR363rO0yj36N4sl5j7UEZ4D5TXA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadImagesLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "UserSignupLambdaVersionN9UmG6DmXf1mgxoBJ9ZuQupSGFhOqclJ9PEXLgS7JpE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserSignupLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "UserSignInLambdaVersionIN87xdBVFj16jsxGUzVoLYZjFvD4itB8O1lqCY7Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserSignInLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "UpdateUserLambdaVersionWccbMAzd3McpTU46HYUosj5Sj0Iw5RnwBFC8qJhQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUserLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "ForgotPasswordLambdaVersionTTWkIbj47w1prZH2skezr9eD9z4q3hkXWpx534hMDw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ForgotPasswordLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "ResetPasswordLambdaVersionrViYYeKTTIHoe4gKu3w4fZG1jHLHXPHrtZkoHKlig": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResetPasswordLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "VerifyDashtokenLambdaVersionKkYXeNWU1CNR8vcVR4GeZOBqlfDP8EyrT7eZS8jmY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifyDashtokenLambdaFunction"
              },
              "CodeSha256": "W9728NBu0u3vQh7C1AHKo1nnpJMATdwJ+0RWZAdcN3c="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-utomea-serverless-api-staging-1",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetAllEventsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllEventsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAllEvents": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAllEventsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetEvents": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /events",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAllEvents"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAllEvents"
          },
          "CreateEventLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateEventLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateEvent": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateEventLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostEvents": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /events",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateEvent"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateEvent"
          },
          "EditEventLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EditEventLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEditEvent": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EditEventLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutEventsIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /events/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEditEvent"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEditEvent"
          },
          "DeleteEventLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteEventLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteEvent": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteEventLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteEventsIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /events/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteEvent"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteEvent"
          },
          "UploadImagesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadImagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUploadImages": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UploadImagesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostEventsUploadIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /events/upload/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUploadImages"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUploadImages"
          },
          "UserSignupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserSignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUserSignup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UserSignupLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUserSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /user/signup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUserSignup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUserSignup"
          },
          "UserSignInLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserSignInLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUserSignIn": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UserSignInLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUserSignin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /user/signin",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUserSignIn"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUserSignIn"
          },
          "UpdateUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUserUserDashdetails": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /user/user-details",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateUser"
          },
          "ForgotPasswordLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ForgotPasswordLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationForgotPassword": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ForgotPasswordLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAuthForgotDashpassword": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /auth/forgot-password",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationForgotPassword"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationForgotPassword"
          },
          "ResetPasswordLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ResetPasswordLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationResetPassword": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ResetPasswordLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAuthResetDashpasswordTokenVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /auth/reset-password/{token}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationResetPassword"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationResetPassword"
          },
          "StorageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "utomea-events"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetAllEventsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllEventsLambdaVersionp8YINiNicYsRxDZ6QwCXwHBKqn632VuSnXg9tEg5kI"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-GetAllEventsLambdaFunctionQualifiedArn"
            }
          },
          "CreateEventLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateEventLambdaVersionLhWEsPGLBqueGKvQCeGLSzDiCGuBYekfph2fghKktfM"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-CreateEventLambdaFunctionQualifiedArn"
            }
          },
          "EditEventLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EditEventLambdaVersionHkL5KZPVh23hGPmfjrorz3ypxpIOzMRpQUGwwfPIdM"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-EditEventLambdaFunctionQualifiedArn"
            }
          },
          "DeleteEventLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteEventLambdaVersion2vD7UldytPr2QNU8Mvcw9TUMn2YRSGY0ZdFC6V1tztU"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-DeleteEventLambdaFunctionQualifiedArn"
            }
          },
          "UploadImagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadImagesLambdaVersionaJDJbShW6ogkiR363rO0yj36N4sl5j7UEZ4D5TXA"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-UploadImagesLambdaFunctionQualifiedArn"
            }
          },
          "UserSignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserSignupLambdaVersionN9UmG6DmXf1mgxoBJ9ZuQupSGFhOqclJ9PEXLgS7JpE"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-UserSignupLambdaFunctionQualifiedArn"
            }
          },
          "UserSignInLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserSignInLambdaVersionIN87xdBVFj16jsxGUzVoLYZjFvD4itB8O1lqCY7Y"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-UserSignInLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUserLambdaVersionWccbMAzd3McpTU46HYUosj5Sj0Iw5RnwBFC8qJhQ"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-UpdateUserLambdaFunctionQualifiedArn"
            }
          },
          "ForgotPasswordLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ForgotPasswordLambdaVersionTTWkIbj47w1prZH2skezr9eD9z4q3hkXWpx534hMDw"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-ForgotPasswordLambdaFunctionQualifiedArn"
            }
          },
          "ResetPasswordLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResetPasswordLambdaVersionrViYYeKTTIHoe4gKu3w4fZG1jHLHXPHrtZkoHKlig"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-ResetPasswordLambdaFunctionQualifiedArn"
            }
          },
          "VerifyDashtokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifyDashtokenLambdaVersionKkYXeNWU1CNR8vcVR4GeZOBqlfDP8EyrT7eZS8jmY"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-VerifyDashtokenLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-utomea-serverless-api-staging-1-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "bucket": "utomea-events"
    },
    "plugins": [
      "serverless-offline",
      "serverless-plugin-typescript"
    ],
    "pluginsData": {},
    "functions": {
      "getAllEvents": {
        "handler": "functions/events.getAllEvents",
        "events": [
          {
            "httpApi": {
              "path": "/events",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/events"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-getAllEvents",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetAllEventsLambdaVersionp8YINiNicYsRxDZ6QwCXwHBKqn632VuSnXg9tEg5kI"
      },
      "createEvent": {
        "handler": "functions/events.createEvent",
        "events": [
          {
            "httpApi": {
              "path": "/events",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/events"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-createEvent",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateEventLambdaVersionLhWEsPGLBqueGKvQCeGLSzDiCGuBYekfph2fghKktfM"
      },
      "editEvent": {
        "handler": "functions/events.editEvent",
        "events": [
          {
            "httpApi": {
              "path": "/events/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/events/{id}"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-editEvent",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "EditEventLambdaVersionHkL5KZPVh23hGPmfjrorz3ypxpIOzMRpQUGwwfPIdM"
      },
      "deleteEvent": {
        "handler": "functions/events.deleteEvent",
        "events": [
          {
            "httpApi": {
              "path": "/events/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/events/{id}"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-deleteEvent",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteEventLambdaVersion2vD7UldytPr2QNU8Mvcw9TUMn2YRSGY0ZdFC6V1tztU"
      },
      "uploadImages": {
        "handler": "index.uploadImagesToS3",
        "events": [
          {
            "httpApi": {
              "path": "/events/upload/{id}",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/events/upload/{id}"
          }
        ],
        "environment": {
          "BUCKET_NAME": "react-native-events"
        },
        "name": "utomea-serverless-api-staging-1-dev-uploadImages",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UploadImagesLambdaVersionaJDJbShW6ogkiR363rO0yj36N4sl5j7UEZ4D5TXA"
      },
      "userSignup": {
        "handler": "functions/auth.userSignup",
        "events": [
          {
            "httpApi": {
              "path": "/user/signup",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/user/signup"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-userSignup",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UserSignupLambdaVersionN9UmG6DmXf1mgxoBJ9ZuQupSGFhOqclJ9PEXLgS7JpE"
      },
      "userSignIn": {
        "handler": "functions/auth.userSignIn",
        "events": [
          {
            "httpApi": {
              "path": "/user/signin",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/user/signin"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-userSignIn",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UserSignInLambdaVersionIN87xdBVFj16jsxGUzVoLYZjFvD4itB8O1lqCY7Y"
      },
      "updateUser": {
        "handler": "functions/auth.updateUser",
        "events": [
          {
            "httpApi": {
              "path": "/user/user-details",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/user/user-details"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-updateUser",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UpdateUserLambdaVersionWccbMAzd3McpTU46HYUosj5Sj0Iw5RnwBFC8qJhQ"
      },
      "forgotPassword": {
        "handler": "functions/auth.forgotPassword",
        "events": [
          {
            "httpApi": {
              "path": "/auth/forgot-password",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/auth/forgot-password"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-forgotPassword",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ForgotPasswordLambdaVersionTTWkIbj47w1prZH2skezr9eD9z4q3hkXWpx534hMDw"
      },
      "resetPassword": {
        "handler": "functions/auth.resetPassword",
        "events": [
          {
            "httpApi": {
              "path": "/auth/reset-password/{token}",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/auth/reset-password/{token}"
          }
        ],
        "name": "utomea-serverless-api-staging-1-dev-resetPassword",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ResetPasswordLambdaVersionrViYYeKTTIHoe4gKu3w4fZG1jHLHXPHrtZkoHKlig"
      },
      "verify-token": {
        "handler": "src/middleware/verifyToken.authenticateJWT",
        "events": [],
        "name": "utomea-serverless-api-staging-1-dev-verify-token",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "VerifyDashtokenLambdaVersionKkYXeNWU1CNR8vcVR4GeZOBqlfDP8EyrT7eZS8jmY"
      }
    },
    "resources": {
      "Resources": {
        "StorageBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "utomea-events"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "utomea-serverless-api-staging-1",
      "frameworkVersion": "3",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/qed42/Desktop/projects/Utomea/.build/.serverless/utomea-serverless-api-staging-1.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/utomea-serverless-api-staging-1/dev/1695821047149-2023-09-27T13:24:07.149Z",
    "artifact": "utomea-serverless-api-staging-1.zip"
  }
}